version: "3.7"

services:
${SERVICES_PMS}

    public:
        image: migasfree/public:$(cat ../../build/public/VERSION)
        deploy:
            replicas: ${REPLICAS_PUBLIC}
            restart_policy:
                condition: on-failure
        env_file:
            - ../config/env/general
            - ../config/env/stack
        volumes:
            - public:/var/migasfree/public:ro
            - conf:/var/lib/migasfree-backend/conf
        networks:
            - mf_network

    frontend:
        image: migasfree/frontend:$(cat ../../build/frontend/VERSION)
        deploy:
            replicas: ${REPLICAS_FRONTEND}
            restart_policy:
                condition: on-failure
        env_file:
            - ../config/env/general
            - ../config/env/stack
        depends_on:
            - backend
        networks:
            - mf_network

    backend:
        image: migasfree/backend:$(cat ../../build/backend/VERSION)
        env_file:
            - ../config/env/general
            - ../config/env/stack
        environment:
              - 'MIGASFREE_FQDN=$FQDN'
        deploy:
            replicas: ${REPLICAS_BACKEND}
            restart_policy:
                condition: on-failure
        secrets:
            - source: password_database
            - source: token_pms
        depends_on:
            - database
            - datastore
            - public
        volumes:
            - conf:/var/lib/migasfree-backend/conf
            - public:/var/lib/migasfree-backend/public
            - keys:/var/lib/migasfree-backend/keys
            - tmp:/var/lib/migasfree-backend/tmp
            - plugins:/venv/lib/python3.7/site-packages/migasfree_backend-5.0-py3.7.egg/migasfree/core/pms/plugins

            # ONLY FOR DEVELOPMENT
            # - /store/desarrollo/git/migasfree-backend/migasfree:/venv/lib/python3.7/site-packages/migasfree_backend-5.0-py3.7.egg/migasfree

        networks:
            - mf_network

    worker:
        image: migasfree/backend:$(cat ../../build/backend/VERSION)
        env_file:
            - ../config/env/general
            - ../config/env/stack
        environment:
              - 'MIGASFREE_FQDN=$FQDN'
        deploy:
            replicas:  ${REPLICAS_WORKER}
            restart_policy:
                condition: on-failure
        secrets:
            - source: password_database
        depends_on:
            - database
            - datastore
            - public
        volumes:
            - conf:/var/lib/migasfree-backend/conf
            - public:/var/lib/migasfree-backend/public
            - keys:/var/lib/migasfree-backend/keys
        networks:
            - mf_network

    beat:
        image: migasfree/backend:$(cat ../../build/backend/VERSION)
        env_file:
            - ../config/env/general
            - ../config/env/stack
        environment:
              - 'MIGASFREE_FQDN=$FQDN'
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        secrets:
            - source: password_database
        depends_on:
            - database
            - datastore
            - public
        volumes:
            - conf:/var/lib/migasfree-backend/conf
            - public:/var/lib/migasfree-backend/public
            - keys:/var/lib/migasfree-backend/keys
        networks:
            - mf_network

    database:
        image: migasfree/database:$(cat ../../build/database/VERSION)
        env_file:
            - ../config/env/general
            - ../config/env/stack
        environment:
            - POSTGRES_PASSWORD_FILE=/run/secrets/password_database
        secrets:
            - source: password_database
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        volumes:
            - type: tmpfs
              target: /dev/shm
              tmpfs:
                size: 1024000000 # (this means 1GB)
            - conf:/etc/migasfree-server
            - database:/var/lib/postgresql/data
            - dump:/var/migasfree/dump
        #ELIMINAR EN PRO, DEJAR SOLO PARA MIGRACION DE BD
        ports:
            - "5432:5432"
        networks:
            - mf_network

    datastore:
        image: migasfree/datastore:$(cat ../../build/datastore/VERSION)
        env_file:
            - ../config/env/general
            - ../config/env/stack
        environment:
            - POSTGRES_PASSWORD_FILE=/run/secrets/password_database
        secrets:
            - source: password_database
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        volumes:
            - datastore:/data
        networks:
            - mf_network


networks:
    mf_network:
        external: true


secrets:
    password_database:
        file: ../config/secrets/password_database
    token_pms:
        file: ../config/secrets/token_pms


volumes:
    conf:
        driver: local
        driver_opts:
            type: nfs4
            o: addr=${NFS_SERVER},rw
            device: :/conf
    database:
        driver: local
        driver_opts:
            type: nfs4
            o: addr=${NFS_SERVER},rw
            device: :/database

    datastore:
        driver: local
        driver_opts:
            type: nfs4
            o: addr=${NFS_SERVER},rw
            device: :/datastore

    dump:
        driver: local
        driver_opts:
            type: nfs4
            o: addr=${NFS_SERVER},rw
            device: :/dump

    public:
        driver: local
        driver_opts:
            type: nfs4
            o: addr=${NFS_SERVER},rw
            device: :/public

    tmp:
        driver: local
        driver_opts:
            type: nfs4
            o: addr=${NFS_SERVER},rw
            device: :/tmp

    plugins:
        driver: local
        driver_opts:
            type: nfs4
            o: addr=${NFS_SERVER},rw
            device: :/plugins

    keys:
        driver: local
        driver_opts:
            type: nfs4
            o: addr=${NFS_SERVER},rw
            device: :/keys

    certificates:
        driver: local
        driver_opts:
            type: nfs4
            o: addr=${NFS_SERVER},rw
            device: :/certificates
