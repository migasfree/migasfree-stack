#!/bin/bash
set -e

mkdir -p /certs
mkdir -p "$LIVE_CERT_FOLDER"

# Create a self signed default certificate, so HAproxy can start before we have
# any real certificates.


# https://gist.github.com/lloesche/d35b820b99d6da5596525ab3b2168ab9

if [[ ! -f /certs/cert.pem ]]; then
    #openssl genrsa -out cert.key 4096
    #openssl req -new -key cert.key -out cert.csr -nodes -subj "/C=ES/ST=ZARAGOZA/L=ZARAGOZA/O=migasfree/OU=dev/CN=${FQDN}/emailAddress=alberto@migasfree.org"
    #openssl x509 -req -days 365 -in cert.csr -signkey cert.key -out cert.crt
    #cat cert.key cert.crt > /certs/cert.pem

    cd /certs
    # Create your CA crt and key:
    openssl req -new -x509 -nodes -newkey rsa:4096 -extensions v3_ca -sha256 -days 3650 -subj "/C=ES/ST=ZARAGOZA/L=ZARAGOZA/O=migasfree/CN=Insecure Certificate Authority" -keyout ca.key -out ca.crt
    chmod 600 ca.key


    # Create a CSR:
    openssl req -newkey rsa:2048 -nodes -sha256 -keyout cert.key -out cert.csr -subj "/C=ES/ST=ZARAGOZA/L=ZARAGOZA/O=migasfree/OU=Core/CN=${FQDN}"

    # Check contents of CSR (optional):
    # openssl req -in cert.csr -text -noout

    # Sign the CSR, resulting in CRT and add the v3 SAN extension:
    openssl x509 -req -in cert.csr -out cert.crt -CA ca.crt -CAkey ca.key -CAcreateserial -sha256 -days 1095 -extensions SAN -extfile <(cat  /etc/ssl/openssl.cnf <(printf "[SAN]\nsubjectAltName=@san_names\nbasicConstraints=CA:FALSE\nkeyUsage=nonRepudiation,digitalSignature,keyEncipherment\n[san_names]\nIP.1=${FQDN}\n"))
    chmod 600 cert.key

    # Check contents of CRT (optional)
    openssl x509 -in cert.crt -text -noout
    
    # Certificate autosigned for SSL in  haproxy
    cat cert.key cert.crt > /certs/cert.pem 
    
    cd -


fi


# Install combined certificates for HAproxy.
if [[ -n "$(ls -A $LIVE_CERT_FOLDER)" ]]; then
    COUNT=0
    for DIR in "$LIVE_CERT_FOLDER"/*; do
        cat "$DIR/privkey.pem" "$DIR/fullchain.pem" > /certs/cert.pem
        (( COUNT += 1 ))
    done
fi
